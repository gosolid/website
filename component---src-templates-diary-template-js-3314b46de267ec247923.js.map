{"version":3,"file":"component---src-templates-diary-template-js-3314b46de267ec247923.js","mappings":"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","sources":["webpack://@gosolid/website/./src/templates/diaryTemplate.module.scss","webpack://@gosolid/website/./src/templates/diaryTemplate.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var author = \"diaryTemplate-module--author--5e592\";\nexport var date = \"diaryTemplate-module--date--b1fa1\";\nexport var decrypted = \"diaryTemplate-module--decrypted--aa044\";\nexport var encrypted = \"diaryTemplate-module--encrypted--e9d41\";\nexport var flexBreak = \"diaryTemplate-module--flex-break--7682f\";\nexport var link = \"diaryTemplate-module--link--bf8bf\";\nexport var linkNext = \"diaryTemplate-module--link-next--e49ce\";\nexport var linkPrevious = \"diaryTemplate-module--link-previous--9790f\";\nexport var links = \"diaryTemplate-module--links--f8c3a\";\nexport var location = \"diaryTemplate-module--location--f1042\";\nexport var meta = \"diaryTemplate-module--meta--0a835\";\nexport var page = \"diaryTemplate-module--page--51c99\";\nexport var pagenav = \"diaryTemplate-module--pagenav--30688\";\nexport var showAll = \"diaryTemplate-module--showAll--6d6e7\";\nexport var title = \"diaryTemplate-module--title--4725c\";\nexport var toolbar = \"diaryTemplate-module--toolbar--d2533\";\nexport var url = \"diaryTemplate-module--url--e0703\";\nexport var wrapper = \"diaryTemplate-module--wrapper--c5d7e\";","import React, { useEffect, useState, useRef } from 'react';\nimport '../styles/site.global.scss';\nimport { Analytics } from '../components/Analytics';\nimport { Link, graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport ChevronLeftRoundedIcon from '@material-ui/icons/ChevronLeftRounded';\nimport LocationOnRoundedIcon from '@material-ui/icons/LocationOnRounded';\nimport CalendarTodayRoundedIcon from '@material-ui/icons/CalendarTodayRounded';\nimport { Header } from '../components/Header';\nimport { PostContent } from '../components/PostContent';\nimport { withEncryptedProvider, useEncrypted } from '../hooks/useEncrypted';\nimport { decode } from 'html-entities';\nimport { compose } from '@grexie/compose';\nimport { ReactComponent as LinkIcon } from '../images/link.svg';\nimport authors from '../../content/authors.json';\nimport { selectCategory } from '../utils/selectCategory';\nimport { formatDate } from '../utils/formatDate';\nimport smartquotes from 'smartquotes';\nimport { emoji } from '../utils/emoji';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n// import { Veritas } from '@grexie/veritas/react';\n\nimport * as styles from './diaryTemplate.module.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nconst prepareExcerpt = excerpt => excerpt?.replace(/@\\w+\\([^)]+\\)/g, '');\n\nconst DiaryTemplate = ({\n  includeMeta = true,\n  includeUrl = true,\n  includeBacklinks = true,\n  pageBreakBefore = false,\n  pageContext: { next, previous, backlink } = {},\n  data,\n}) => {\n  const page = useRef();\n  const { markdownRemark } = data;\n  const { excerpt, frontmatter, fields, html, hero } = markdownRemark;\n  const author = authors[frontmatter.author?.toLowerCase()];\n  const location = frontmatter.location;\n  const { decrypted } = useEncrypted();\n  const bottomRef = useRef();\n  const [unread, setUnread] = useState(false);\n\n  let categories = selectCategory(fields.slug, frontmatter.categories ?? []);\n\n  useEffect(() => {\n    typeof localStorage === 'undefined'\n      ? false\n      : localStorage.getItem(fields.slug) !== 'read';\n  }, []);\n\n  useEffect(() => {\n    if (unread) {\n      localStorage.removeItem(fields.slug);\n    } else {\n      localStorage.setItem(fields.slug, 'read');\n    }\n  }, [unread]);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(function (entries, observer) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          setUnread(false);\n        }\n      });\n    });\n\n    const el = bottomRef.current;\n\n    if (el) {\n      observer.observe(el);\n\n      return () => observer.unobserve(el);\n    }\n  }, [decrypted]);\n\n  if (decrypted && backlink) {\n    categories.unshift({\n      slug: backlink.fields.slug\n        .replace(/\\/index\\/$/, '/')\n        .replace(/^\\//, '')\n        .replace(/\\/$/, ''),\n      name: backlink.frontmatter.title,\n    });\n  }\n\n  var categoriesSeen = {};\n  categories = categories.filter(category => {\n    if (categoriesSeen[category.slug]) {\n      return false;\n    }\n\n    categoriesSeen[category.slug] = true;\n    return true;\n  });\n\n  return (\n    <>\n      {includeMeta && (\n        <>\n          <Analytics />\n          <Helmet\n            title={`${\n              decrypted ? smartquotes(frontmatter.title) : 'Private'\n            } | Solid`}\n          >\n            <link\n              rel=\"canonical\"\n              href={frontmatter?.url ?? `https://gosolid.dev${fields.slug}`}\n            />\n            <meta\n              name=\"twitter:title\"\n              content={\n                decrypted\n                  ? smartquotes(frontmatter.title)\n                  : 'Private encrypted page | Solid'\n              }\n            />\n            <meta\n              name=\"twitter:description\"\n              content={decrypted ? prepareExcerpt(excerpt) : 'Solid'}\n            />\n            <meta\n              name=\"og:url\"\n              content={frontmatter?.url ?? `https://gosolid.dev${fields.slug}`}\n            />\n            <meta\n              property=\"og:title\"\n              content={\n                decrypted\n                  ? smartquotes(frontmatter.title)\n                  : 'Private encrypted page | Solid'\n              }\n            />\n            <meta\n              property=\"og:description\"\n              content={decrypted ? prepareExcerpt(excerpt) : 'Solid'}\n            />\n            <link\n              href=\"https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,400;0,500;0,600;1,400;1,500;1,600&display=swap\"\n              rel=\"stylesheet\"\n            />\n            <link\n              href=\"https://fonts.googleapis.com/css2?family=Noto+Serif:ital,wght@0,400;0,500;0,600;1,400;1,500;1,600&display=swap\"\n              rel=\"stylesheet\"\n            />\n          </Helmet>\n          <Header\n            disableAnalytics={!(frontmatter.analytics ?? true)}\n            twitter={frontmatter.twitter}\n            facebook={frontmatter.facebook}\n            className={frontmatter.className}\n          />\n        </>\n      )}\n\n      <div\n        className={cx('page', frontmatter.className, {\n          encrypted: fields.encrypted,\n          decrypted,\n        })}\n        id={markdownRemark.key}\n        style={{\n          pageBreakBefore: !pageBreakBefore\n            ? 'auto'\n            : markdownRemark.pageBreak ?? 'always',\n        }}\n        ref={page}\n      >\n        <div className={cx('wrapper')}>\n          <div className={cx('post')}>\n            {decrypted && includeBacklinks && !!categories.length && (\n              <div className={cx('pagenav')}>\n                {categories.map((category, i) => (\n                  <Link\n                    key={category.slug}\n                    to={category.default ? '/' : `/${category.slug}/`}\n                  >\n                    {i === 0 && <ChevronLeftRoundedIcon />}\n                    <span>{category.name}</span>\n                  </Link>\n                ))}\n              </div>\n            )}\n\n            {(!decrypted || (frontmatter.showTitle ?? true)) && (\n              <h1\n                className={cx('title')}\n                dangerouslySetInnerHTML={{\n                  __html: decrypted\n                    ? emoji(decode(frontmatter.title))\n                    : 'Private',\n                }}\n              />\n            )}\n            {decrypted && (\n              <div className={cx('meta')}>\n                {frontmatter.dateString && frontmatter.showLink !== false && (\n                  <time className={cx('date')}>\n                    <CalendarTodayRoundedIcon />\n                    <span>{formatDate(frontmatter.dateString)}</span>\n                  </time>\n                )}\n                {location && frontmatter.showLink !== false && (\n                  <div className={cx('location')}>\n                    <LocationOnRoundedIcon />\n                    <span>{location}</span>\n                  </div>\n                )}\n                {author && (\n                  <a href={author.profile} target=\"_blank\" title={author.name}>\n                    <div className={cx('author')}>\n                      <img src={author.avatar} />\n                      <span>{author.name}</span>\n                    </div>\n                  </a>\n                )}\n              </div>\n            )}\n            {decrypted && includeUrl && frontmatter.showLink !== false && (\n              <div className={cx('meta')}>\n                <a\n                  className={cx('url')}\n                  href={frontmatter?.url ?? `https://gosolid.dev${fields.slug}`}\n                >\n                  <LinkIcon />\n                  <span>\n                    {frontmatter?.url ?? `https://gosolid.dev${fields.slug}`}\n                  </span>\n                </a>\n              </div>\n            )}\n\n            {decrypted && hero?.childImageSharp?.gatsbyImageData && (\n              <GatsbyImage image={hero?.childImageSharp?.gatsbyImageData} />\n            )}\n\n            <PostContent\n              html={html}\n              encrypted={fields.encrypted}\n              hasDecrypted={fields.hasDecrypted}\n            />\n\n            {decrypted && (\n              <>\n                <div\n                  ref={bottomRef}\n                  style={{ height: 0, width: 0, flex: '0 0 auto' }}\n                >\n                  {'\\u00a0'}\n                </div>\n                {frontmatter.showRead !== true && (\n                  <div className={cx('toolbar', 'noprint')}>\n                    {!!unread && (\n                      <button onClick={() => setUnread(false)}>\n                        Mark as Read\n                      </button>\n                    )}\n                    {!unread && (\n                      <button onClick={() => setUnread(true)}>\n                        Mark as Unread\n                      </button>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst pageQuery = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt(pruneLength: 400)\n      frontmatter {\n        dateString: date\n        date(formatString: \"ddd Do MMMM YYYY H:mm:ss a z\")\n        title\n        author\n        location\n        showTitle\n        url\n        categories\n        twitter\n        facebook\n        className\n        showLink\n        showMeta\n        showRead\n      }\n      fields {\n        encrypted\n        slug\n      }\n      hero {\n        childImageSharp {\n          gatsbyImageData(\n            layout: FULL_WIDTH\n            aspectRatio: 1.34\n            transformOptions: { fit: COVER, cropFocus: ATTENTION }\n          )\n        }\n      }\n    }\n  }\n`;\n\nexport default compose(\n  withEncryptedProvider(\n    ({\n      data: {\n        markdownRemark: {\n          fields: { encrypted },\n        },\n      },\n    }) => ({\n      encrypted,\n    })\n  ),\n  DiaryTemplate\n);\n\nexport { pageQuery };\n"],"names":["author","date","decrypted","encrypted","flexBreak","linkNext","linkPrevious","links","meta","page","pagenav","showAll","title","toolbar","url","wrapper","cx","classNames","styles","prepareExcerpt","excerpt","replace","pageQuery","compose","withEncryptedProvider","data","markdownRemark","fields","includeMeta","includeUrl","includeBacklinks","pageBreakBefore","pageContext","backlink","next","previous","useRef","frontmatter","html","hero","authors","toLowerCase","location","useEncrypted","bottomRef","useState","unread","setUnread","categories","selectCategory","slug","useEffect","localStorage","getItem","removeItem","setItem","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","el","current","observe","unobserve","unshift","name","categoriesSeen","filter","category","Analytics","Helmet","smartquotes","rel","href","content","property","Header","disableAnalytics","analytics","twitter","facebook","className","id","key","style","pageBreak","ref","length","map","i","Link","to","default","ChevronLeftRounded","showTitle","dangerouslySetInnerHTML","__html","emoji","decode","dateString","showLink","CalendarTodayRounded","formatDate","LocationOnRounded","profile","target","src","avatar","childImageSharp","gatsbyImageData","G","image","PostContent","hasDecrypted","height","width","flex","showRead","onClick"],"sourceRoot":""}